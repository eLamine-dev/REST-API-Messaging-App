// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               Int           @id @default(autoincrement())
  email            String        @unique
  password         String
  username         String
  sentMessages     Message[]     @relation("SentMessages")
  receivedMessages Message[]     @relation("ReceivedMessages")
  status           String        @default("offline")
  groupChats       GroupChat[]   @relation("UserGroups")
  privateChats     PrivateChat[] @relation("UserPrivateChats")
}

model Message {
  id            Int          @id @default(autoincrement())
  content       String
  senderId      Int
  receiverId    Int?
  groupChatId   Int?
  privateChatId Int?
  timestamp     DateTime     @default(now())
  sender        User         @relation(fields: [senderId], references: [id], name: "SentMessages")
  receiver      User?        @relation(fields: [receiverId], references: [id], name: "ReceivedMessages")
  groupChat     GroupChat?   @relation(fields: [groupChatId], references: [id])
  privateChat   PrivateChat? @relation(fields: [privateChatId], references: [id])
}

model GroupChat {
  id       Int       @id @default(autoincrement())
  name     String
  members  User[]    @relation("UserGroups")
  messages Message[]
}

model PrivateChat {
  id       Int       @id @default(autoincrement())
  name     String
  members  User[]    @relation("UserPrivateChats")
  messages Message[]
}
